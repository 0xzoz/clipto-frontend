/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  CliptoExchangeStorage,
  CliptoExchangeStorageInterface,
} from "../CliptoExchangeStorage";

const _abi = [
  {
    inputs: [],
    name: "beacon",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "creators",
    outputs: [
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        internalType: "string",
        name: "metadataURI",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "requests",
    outputs: [
      {
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        internalType: "address",
        name: "nftReceiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "erc20",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "fulfilled",
        type: "bool",
      },
      {
        internalType: "string",
        name: "metadataURI",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class CliptoExchangeStorage__factory {
  static readonly abi = _abi;
  static createInterface(): CliptoExchangeStorageInterface {
    return new utils.Interface(_abi) as CliptoExchangeStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CliptoExchangeStorage {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CliptoExchangeStorage;
  }
}
